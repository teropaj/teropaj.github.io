{"version":3,"sources":["components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","students","state","value","searchList","myFunction","bind","assertThisInitialized","filter","li","i","console","log","search","toUpperCase","document","getElementById","getElementsByTagName","searchListHelper","length","student","toLocaleUpperCase","indexOf","push","setState","_this2","react_default","a","createElement","className","type","id","ref","input","onChange","placeholder","map","Component","App","components_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wOAmFeA,cA7Eb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,SAAU,CAAC,QAChB,QACA,YACAP,EAAKQ,MAAQ,CAACC,MAAO,GACRF,SAAWP,EAAKO,SAChBG,WAAYV,EAAKO,UAI9BP,EAAKW,WAAaX,EAAKW,WAAWC,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAXDA,4EAmBhB,IAAWc,EAAYC,EAAOC,EAF/BC,QAAQC,IAAIf,KAAKgB,OAAOV,OAIvBK,EADQX,KAAKgB,OAAOV,MACLW,cAEfL,EADKM,SAASC,eAAe,QACrBC,qBAAqB,MAC7BN,QAAQC,IAAIH,EAAG,GAAGQ,qBAAqB,OACvC,IAAIC,EAAiB,GAGrB,IAAKR,EAAI,EAAGA,EAAIb,KAAKK,MAAMD,SAASkB,OAAQT,IAAK,CAChD,IAAIU,EAAQvB,KAAKK,MAAMD,SAASS,GAChCC,QAAQC,IAAIQ,EAAQZ,EACpBY,EAAQC,oBAAoBC,QAAQd,IAEhCY,EAAQC,oBAAoBC,QAAQd,IAAS,GAAGU,EAAiBK,KAAKH,GAS5EvB,KAAK2B,SAAS,CAACpB,WAAWc,qCAInB,IAAAO,EAAA5B,KAMP,OACE6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAIlBH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,GAAG,UACpBC,IAAK,SAAAC,GAAK,OAAIR,EAAKZ,OAASoB,GAC5BC,SAAUrC,KAAKQ,WAAY8B,YAAY,uBAEvCT,EAAAC,EAAAC,cAAA,MAAIG,GAAG,QACHlC,KAAKK,MAAME,WAAWgC,IAAI,SAAAhB,GAAO,OAEhCM,EAAAC,EAAAC,cAAA,MAAIG,GAAIX,GAAUA,OAMvBM,EAAAC,EAAAC,cAAA,kBAzEYS,aCyBPC,mLAdX,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAACW,EAAD,eAbUF,aCOEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAAShC,SAASC,eAAe,SD2H3C,kBAAmBgC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.bf2f5de2.chunk.js","sourcesContent":["import React, {Component} from 'react';\n \n//import './App.css';\n\nclass Search extends  Component  {\n\n  constructor(props) {\n    super(props);\n    this.students= ['Adele',\n    'Billy',\n    'Cristina']\n    this.state = {value: '',\n                 students:  this.students,\n                 searchList: this.students \n\n                          };\n\n    this.myFunction = this.myFunction.bind(this);\n     \n  }\n\n\n  myFunction() {\n    console.log(this.search.value);\n    // Declare variables\n     var input, filter, ul, li, a, i, txtValue;\n     input = this.search.value;\n     filter = input.toUpperCase();\n     ul = document.getElementById(\"myUL\");\n     li = ul.getElementsByTagName('li');\n     console.log(li[0].getElementsByTagName(\"li\"))\n     let searchListHelper=[]\n  \n    //Loop through all list items \n     for (i = 0; i < this.state.students.length; i++) {\n      let student=this.state.students[i]\n      console.log(student,filter,\n      student.toLocaleUpperCase().indexOf(filter))\n\n      if (student.toLocaleUpperCase().indexOf(filter)>-1) searchListHelper.push(student)\n      // console.log(a)\n      // txtValue = a.textContent || a.innerText;\n      // if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      //    li[i].style.display = \"\";\n      // } else {\n      //    li[i].style.display = \"none\";\n      //   }\n    }\n    this.setState({searchList:searchListHelper})\n  }\n  \n  \n  render() {\n     \n\n\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n           \n           \n         \n        <input type=\"text\" id=\"myInput\"\n          ref={input => this.search = input}\n          onChange={this.myFunction} placeholder=\"Search for names..\"/>\n             \n          <ul id=\"myUL\">\n             {this.state.searchList.map(student=>\n              \n               <li id={student}>{student}</li>\n               \n             )}\n              \n        </ul>\n        </header>\n          <p></p>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\n \nimport './App.css';\nimport Search from './components/Search'\n\nclass App extends Component {\n \n  \n  \n  render() {\n     \n\n\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Search/>\n           \n        </header>\n         \n         \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}