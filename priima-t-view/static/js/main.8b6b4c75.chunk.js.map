{"version":3,"sources":["components/Search.js","components/functions/sortByName.js","components/functions/sortByGrade.js","App.js","serviceWorker.js","index.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","orderByScore","students","state","searchList","myFunction","bind","assertThisInitialized","clickSortByName","clickSortByGrade","filter","i","console","log","search","value","toUpperCase","document","getElementById","searchListHelper","length","student","toLocaleUpperCase","indexOf","push","setState","e","array","sort","a","b","nameA","nameB","_this2","react_default","createElement","className","type","id","ref","input","onChange","placeholder","style","textAlign","onClick","map","index","key","Component","App","components_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4OA4IeA,cApIb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,cAAa,EAClBP,EAAKQ,SAAU,CACC,CAAC,QAAQ,IACT,CAAC,WAAW,GACZ,CAAC,QAAQ,IAIzBR,EAAKS,MAAQ,CAACF,cAAc,EACfC,SAAWR,EAAKQ,SAChBE,WAAYV,EAAKQ,UAI9BR,EAAKW,WAAaX,EAAKW,WAAWC,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAClBA,EAAKc,gBAAkBd,EAAKc,gBAAgBF,KAArBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACvBA,EAAKe,iBAAmBf,EAAKe,iBAAiBH,KAAtBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAlBPA,4EA+BhB,IAAWgB,EAAmBC,EAF/BC,QAAQC,IAAIhB,KAAKiB,OAAOC,OAIvBL,EADQb,KAAKiB,OAAOC,MACLC,cACVC,SAASC,eAAe,QAG7B,IAAIC,EAAiB,GAGrB,IAFDP,QAAQC,IAAIhB,KAAKM,MAAMD,UAEjBS,EAAI,EAAGA,EAAId,KAAKM,MAAMD,SAASkB,OAAQT,IAAK,CAChD,IAAIU,EAAQxB,KAAKM,MAAMD,SAASS,GAChCC,QAAQC,IAAIQ,EAAQX,EACpBW,EAAQ,GAAGC,oBAAoBC,QAAQb,IAEnCW,EAAQ,GAAGC,oBAAoBC,QAAQb,IAAS,GAAGS,EAAiBK,KAAKH,GAS/ExB,KAAK4B,SAAS,CAACrB,WAAWe,4CAEZO,GAEdd,QAAQC,IAAI,SAAShB,KAAKM,MAAMF,cAChCW,QAAQC,IAAIa,GACZd,QAAQC,IAAI,UAAUhB,KAAKM,MAAMD,UAChC,ICrEwByB,EDqEpBR,ICrEoBQ,EDqEQ9B,KAAKM,MAAMD,UChEvC0B,KAAK,SAASC,EAAGC,GAKblB,QAAQC,IAAI,YACZ,IAAIkB,EAAQF,EAAE,GAAGb,cACbgB,EAAQF,EAAE,GAAGd,cAE3B,OAAIe,EAAQC,GACF,EAEND,EAAQC,EACH,EAIF,IAIAL,GD4CLf,QAAQC,IAAI,SAASM,GACrBtB,KAAK4B,SAAS,CAACvB,SAASiB,6CAKVO,GACf,IE7EiCC,EF6E7BR,GE7E6BQ,EF6EA9B,KAAKM,MAAMD,SE3E3CU,QAAQC,IAAI,YAGdc,EAAMC,KAAK,SAASC,EAAGC,GAIlB,IAAIC,EAAMC,EAMf,OAJUD,EAAQF,EAAE,KACVG,EAAQF,EAAE,KAIV,EAENC,EAAQC,EACH,EAIF,IAIAL,GFmDN9B,KAAK4B,SAAS,CAACvB,SAAUiB,qCAElB,IAAAc,EAAApC,KAUP,OACEqC,EAAAL,EAAAM,cAAA,WACED,EAAAL,EAAAM,cAAA,UAAQC,UAAU,cAGjBF,EAAAL,EAAAM,cAAA,WACCD,EAAAL,EAAAM,cAAA,SAAOE,KAAK,OAAOC,GAAG,UACtBC,IAAK,SAAAC,GAAK,OAAIP,EAAKnB,OAAS0B,GAC5BC,SAAU5C,KAAKQ,WAAYqC,YAAY,wBAOnCR,EAAAL,EAAAM,cAAA,SAAOQ,MAAO,CAACC,UAAW,SAC1BV,EAAAL,EAAAM,cAAA,UACED,EAAAL,EAAAM,cAAA,MACEU,QAAUhD,KAAKW,iBADjB,kBAMA0B,EAAAL,EAAAM,cAAA,MACCU,QAAUhD,KAAKY,kBADhB,iBAMCZ,KAAKM,MAAMC,WAAW0C,IAAI,SAACzB,EAAQ0B,GAAT,OACtBb,EAAAL,EAAAM,cAAA,UACCD,EAAAL,EAAAM,cAAA,MAAIa,IAAKD,GAAQ1B,EAAQ,GAAzB,OACAa,EAAAL,EAAAM,cAAA,MAAIQ,MAAO,CAACC,UAAW,WAAYvB,EAAQ,iBApH3C4B,aGuBPC,mLAdX,OACEhB,EAAAL,EAAAM,cAAA,OAAKC,UAAU,OACbF,EAAAL,EAAAM,cAAA,UAAQC,UAAU,cAClBF,EAAAL,EAAAM,cAACgB,EAAD,eAbUF,aCOEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxB,EAAAL,EAAAM,cAACwB,EAAD,MAAS1C,SAASC,eAAe,SD2H3C,kBAAmB0C,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8b6b4c75.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport sortByName from './functions/sortByName'\nimport sortByGrade from './functions/sortByGrade'\n \n//import './App.css';\n\nclass Search extends  Component  {\n\n  constructor(props) {\n    super(props);\n    this.orderByScore=true\n    this.students= [ \n                    ['Billy',12],\n                    ['Cristina',7],\n                    ['Adele',6]\n  ]\n\n  //sortByName(this.students)   //sort students\n    this.state = {orderByScore: false,\n                 students:  this.students,\n                 searchList: this.students \n\n                          };\n\n    this.myFunction = this.myFunction.bind(this);\n    this.clickSortByName = this.clickSortByName.bind(this);\n    this.clickSortByGrade = this.clickSortByGrade.bind(this);\n     \n  }\n\n  \n\n    \n\n\n  myFunction() {\n     \n    console.log(this.search.value);\n    // Declare variables\n     var input, filter, ul, li, a, i, txtValue;\n     input = this.search.value;\n     filter = input.toUpperCase();\n     ul = document.getElementById(\"myUL\");\n    //  li = ul.getElementsByTagName('td');\n    //  console.log(li[0].getElementsByTagName(\"li\"))\n     let searchListHelper=[]\n    console.log(this.state.students)\n    //Loop through all list items \n     for (i = 0; i < this.state.students.length; i++) {\n      let student=this.state.students[i]\n      console.log(student,filter,\n      student[0].toLocaleUpperCase().indexOf(filter))\n\n      if (student[0].toLocaleUpperCase().indexOf(filter)>-1) searchListHelper.push(student)\n      // console.log(a)\n      // txtValue = a.textContent || a.innerText;\n      // if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      //    li[i].style.display = \"\";\n      // } else {\n      //    li[i].style.display = \"none\";\n      //   }\n    }\n    this.setState({searchList:searchListHelper})\n  }\n  clickSortByName(e) {\n     \n    console.log('state ',this.state.orderByScore)\n    console.log(e) \n    console.log('before ',this.state.students)\n     let searchListHelper=sortByName(this.state.students);\n     console.log('after ',searchListHelper)\n     this.setState({students:searchListHelper})\n// }\n  \n  \n  }\n  clickSortByGrade(e){\n    let searchListHelper=sortByGrade(this.state.students);\n    this.setState({students: searchListHelper})}\n  \n  render() {\n\n//     sortByScore() {this.searchListHelper=sort(this.searchListHelper,'Score');\n//     setState(student:{this.searchListHelper})\n// }\n     \n\n\n\n\n    return (\n      <div >\n        <header className=\"App-header\">\n           \n           \n         <div>\n          <input type=\"text\" id=\"myInput\"\n          ref={input => this.search = input}\n          onChange={this.myFunction} placeholder=\"Search for names..\"/>\n           \n        </div>\n\n          \n            \n               \n              <table style={{textAlign: 'left'}}>\n              <tr>\n                <th\n                  onClick={ this.clickSortByName}\n                  >Student ↓</th>\n                \n                \n                \n                <th \n                 onClick={ this.clickSortByGrade}\n                 >Score ↓</th>\n              </tr>\n               \n\n                {this.state.searchList.map((student,index)=>\n                     <tr>\n                      <td key={index}>{student[0]}   </td>\n                      <td style={{textAlign: 'center'}}>{student[1]}</td>\n                   </tr>\n                )\n              }\n\n\n               \n\n              </table>\n                \n          \n        </header>\n           \n      </div>\n    );\n  }\n}\n\nexport default Search;\n","export default function sort(array ) {\n\n     \n     \n    \n   array.sort(function(a, b) {\n\n     \n\n        \n             console.log('was here')\n             var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n             var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n        \n   if (nameA < nameB) {\n     return -1;\n   }\n   if (nameA > nameB) {\n     return 1;\n   }\n   \n   // names must be equal\n   return 0;\n   \n   \n   });\n   return array\n   }\n\n   //console.log(sort(['c','b','a']))\n\n   \n","export default function sortByGrade (array) {\n\n     console.log('was here')\n     \n    \n   array.sort(function(a, b) {\n\n     \n\n        let nameA,nameB\n       \n             nameA = a[1]; // ignore upper and lowercase\n             nameB = b[1]; // ignore upper and lowercase\n       \n        \n   if (nameA < nameB) {\n     return -1;\n   }\n   if (nameA > nameB) {\n     return 1;\n   }\n   \n   // names must be equal\n   return 0;\n   \n   \n   });\n   return array\n   }\n\n   //console.log(sort(['c','b','a']))\n\n   \n","import React, { Component } from 'react';\n \nimport './App.css';\nimport Search from './components/Search'\n\nclass App extends Component {\n \n  \n  \n  render() {\n     \n\n\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Search/>\n           \n        </header>\n         \n         \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}