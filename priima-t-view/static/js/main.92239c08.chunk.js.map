{"version":3,"sources":["components/Swipe.js","components/Search.js","components/functions/sortByName.js","components/functions/sortByGrade.js","components/Footer.js","components/Header.js","components/TeacherLoggedIn.js","App.js","serviceWorker.js","index.js"],"names":["Swipe","reactSwipeEl","react_default","a","createElement","className","style","textAlign","lib_default","swipeOptions","continuous","ref","el","this","props","panes","map","student","index","key","float","onClick","next","prev","Component","Search","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","orderByScore","students","state","listOfStudents","searchList","myFunction","bind","assertThisInitialized","clickSortByName","clickSortByGrade","console","log","filter","i","search","value","toUpperCase","document","getElementById","searchListHelper","length","toLocaleUpperCase","indexOf","push","setState","e","array","sort","b","nameA","nameB","_this2","table","components_Swipe","type","id","fontSize","input","onChange","placeholder","Footer","Header","TeacherLoggedIn","require","handleClick","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","send","component","target","groups","group","App","callback","dataFromChild","numberOfGroup","ListNamesOfGroup","data","lenght","getOwnPropertyNames","jsonFile","groupList","help","groupId","dir","toString","groupNumber","studentList","name","components_Header","components_Search","components_TeacherLoggedIn","testi","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92239c08.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './css/Swipe.css'\n//import './App.css';\nimport ReactSwipe from 'react-swipe';\n\n \n\n\nclass Swipe extends Component {\n  render() {\n    let reactSwipeEl;\n    return (\n      <div className=\"App\"  style={{textAlign: 'left'}}>\n        <ReactSwipe\n        className=\"carousel\"\n        swipeOptions={{ continuous: false }}\n        ref={el => (reactSwipeEl = el)}\n      >\n        { this.props.panes.map((student,index)=>\n          <div key={index} className=\"carousel\">{student}</div>\n        \n        )} \n \n      </ReactSwipe>\n      <button style={{float: 'right'}} onClick={() => reactSwipeEl.next()}>Next</button>\n      <button style={{float: 'left'}}onClick={() => reactSwipeEl.prev()}>Previous</button>\n      </div>\n    );\n  }\n}\n\nexport default Swipe;\n","import React, {Component} from 'react';\nimport sortByName from './functions/sortByName'\nimport sortByGrade from './functions/sortByGrade'\nimport Swipe from './Swipe'\n \nimport './css/search.css';\n\nclass Search extends  Component  {\n\n  constructor(props) {\n    super(props);\n    this.orderByScore=true\n    this.students= [ \n                    ['Billy',12],\n                    ['Cristina',7],\n                    ['Adele',6],\n                    ['Alana',20]\n  ]\n\n  //sortByName(this.students)   //sort students\n    this.state = {orderByScore: false,\n                 students:  this.props.listOfStudents,\n                 searchList: this.props.listOfStudents\n\n                          };\n\n    this.myFunction = this.myFunction.bind(this);\n    this.clickSortByName = this.clickSortByName.bind(this);\n    this.clickSortByGrade = this.clickSortByGrade.bind(this);\n     \n  }\n  componentDidMount(){console.log('test '+this.props.listOfStudents)}\n\n  \n\n    \n\n\n  myFunction() {\n     \n    console.log(this.search.value);\n    // Declare variables\n     var input, filter, ul, li, a, i, txtValue;\n     input = this.search.value;\n     filter = input.toUpperCase();\n     ul = document.getElementById(\"myUL\");\n    //  li = ul.getElementsByTagName('td');\n    //  console.log(li[0].getElementsByTagName(\"li\"))\n     let searchListHelper=[]\n    console.log(this.state.students)\n    //Loop through all list items \n     for (i = 0; i < this.state.students.length; i++) {\n      let student=this.state.students[i]\n      console.log('student ***'+student)\n      console.log(student,filter,\n      student[0].toLocaleUpperCase().indexOf(filter))\n\n      if (student[0].toLocaleUpperCase().indexOf(filter)>-1) {searchListHelper.push(student)\n        console.log('HELPER '+searchListHelper)}\n      // console.log(a)\n      // txtValue = a.textContent || a.innerText;\n      // if (txtValue.toUpperCase().indexOf(filter) > -1) {\n      //    li[i].style.display = \"\";\n      // } else {\n      //    li[i].style.display = \"none\";\n      //   }\n    }\n    console.log('SEARCHLIST '+this.state.searchList)\n    this.setState({searchList:searchListHelper})\n  }\n  clickSortByName(e) {\n     \n    console.log('state ',this.state.orderByScore)\n    console.log(e) \n    console.log('before ',this.state.students)\n     let searchListHelper=sortByName(this.state.searchList);\n     console.log('after ',searchListHelper)\n     this.setState({students:searchListHelper})\n// }\n  \n  \n  }\n  clickSortByGrade(e){\n    let searchListHelper=sortByGrade(this.state.searchList);\n    this.setState({students: searchListHelper})}\n  \n  render() {\n\n//     sortByScore() {this.searchListHelper=sort(this.searchListHelper,'Score');\n//     setState(student:{this.searchListHelper})\n// }\n     \n\n\n    console.table('render '+this.state.searchList)\n\n    return (\n      <div className=\"SearchHeight\" >\n         \n           \n           \n         <div className=\"fontSize\">\n           \n        </div>\n              <Swipe panes={this.state.searchList}/>\n\n          \n            \n              <input type=\"text\" id=\"myInput\" style={{fontSize: '3vh'}}\n          ref={input => this.search = input}\n          onChange={this.myFunction} placeholder=\"Search for names..\"/>\n              <table className='fontSize' >\n              <thead> \n                <tr>\n                  <th\n                    onClick={ this.clickSortByName}\n                    >Student ↓</th>\n                  \n                  \n                  \n                  <th \n                  onClick={ this.clickSortByGrade}\n                  >Score ↓</th>\n                </tr>\n              </thead>\n               <tbody> \n\n                {this.state.searchList.map((student,index)=>\n                     <tr key={index}a>\n                      <td key={index}>{student[0]}   </td>\n                      <td style={{textAlign: 'center'}}>{student[2]}</td>\n                   </tr>\n                )\n              }\n              </tbody>\n\n\n               \n\n              </table>\n                \n          \n         \n           \n      </div>\n    );\n  }\n}\n\nexport default Search;\n","export default function sort(array ) {\n\n     \n     \n    \n   array.sort(function(a, b) {\n\n     \n\n        \n             console.log('was here')\n             var nameA = a[0].toUpperCase(); // ignore upper and lowercase\n             var nameB = b[0].toUpperCase(); // ignore upper and lowercase\n        \n   if (nameA < nameB) {\n     return -1;\n   }\n   if (nameA > nameB) {\n     return 1;\n   }\n   \n   // names must be equal\n   return 0;\n   \n   \n   });\n   return array\n   }\n\n   //console.log(sort(['c','b','a']))\n\n   \n","export default function sortByGrade (array) {\n\n     console.log('was here')\n     \n    \n   array.sort(function(a, b) {\n\n     \n\n        let nameA,nameB\n       \n             nameA = a[1]; // ignore upper and lowercase\n             nameB = b[1]; // ignore upper and lowercase\n       \n        \n   if (nameA < nameB) {\n     return -1;\n   }\n   if (nameA > nameB) {\n     return 1;\n   }\n   \n   // names must be equal\n   return 0;\n   \n   \n   });\n   return array\n   }\n\n   //console.log(sort(['c','b','a']))\n\n   \n","import React, { Component } from 'react';\nimport './css/Footer.css'\n \n\n \n\n\nclass Footer extends Component {\n  render() {\n     \n    return (\n      <div className=\"footer\" >\n         <h1>footer</h1>\n         \n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './css/Header.css'\n \n\n \n\n\nclass Header extends Component {\n  render() {\n     \n    return (\n      <div className=\"header\" >\n         <h1>Header</h1>\n         \n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './css/TeacherLoggedIn.css'\nconst jsonFile = require('jsonfile')\nconst fileName = './teacherViewJson.json'\n\n \n\n \n\n\nclass TeacherLoggedIn extends Component {\n   \n  constructor(props){\n    super(props)\n    this.handleClick=this.handleClick.bind(this)\n  }\n  \n  \n  \n  componentDidMount(){\n    //const jsonFile = require('jsonfile')\n    //const fileName = './teacherViewJson.json'\n\n    // const jsonData = jsonFile.readFileSync(fileName);\n\n    // jsonData = jsonFile.readFileSync(fileName);\n\n    // let lenght=Object.getOwnPropertyNames(jsonData.groupList).length\n    // for (let i=0;i<lenght-1;i++){\n    //   console.dir(i+' '+jsonData.groupList[i].groupId)\n    }\n\n\n    \n\n\n\n\n\n      \n  \n\n  functioinuseXMLHttpRequest(){    //works only on server\n    console.log('Teacher')\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function() {\n      if (this.readyState === 4 && this.status === 200) {\n        console.log(this.responseText)\n        console.log('Teacher')\n      }\n    };\n    xhttp.open(\"GET\", \"./teacherViewJson.json\", true);\n    xhttp.send();\n  }\n  handleClick(e) {console.log(e)\n    this.props.component(e.target.id)}\n\n  \n  \n  render() {\n     \n    return (\n      <div className=\"TeacherHeight\" >\n          \n         <ul className=\"listType\"> \n          {this.props.groups.map((group,index)=>\n           <li \n              key={index} >\n               \n           <button onClick={this.handleClick}\n                  //{this.props.component(index)}\n                  id={index}\n                  >{group}</button>\n           </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TeacherLoggedIn;\n"," \n\n\nimport React, { Component } from 'react';\n \nimport './App.css';\nimport Search from './components/Search'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport TeacherLoggedIn from './components/TeacherLoggedIn'\nimport jsonFile from './components/teacherViewJson.json'\n//import jsonTest from './components/jsonTest.json' \n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={component:2}\n    this.numberOfGroup=0\n    this.component=2  //1=Search component else Teacher logged in\n    //this.jsonParsed= this.jsonParsed=JSON.parse('{\"joo\":\"jee\"}');\n     //this.jsonParsed=JSON.parse(jsonTest)\n     this.callback=this.callback.bind(this)\n  }\n   \n\ncomponentDidMount(){\n   //this.jsonParsed=JSON.parse(jsonFile);\n  // console.log(this.jsonParsed)\n   //console.log(this.jsonParsed)\n   //console.log('jsontest ',jsonTest.joo)\n   this.ListNamesOfGroup(0)\n  \n} \ngroups(data){\n  let groups=[],string=\"\"\n  let lenght=Object.getOwnPropertyNames(jsonFile.groupList).length\n  for (let i=0;i<lenght-1;i++){\n    let help=data.groupList[i].groupId\n    console.dir(i+' '+help)\n    groups.push(help)\n    string+=help\n\n  \n  }\n  let value=groups.toString\n  console.log('list ',typeof (value),' ',groups)\n  return groups\n}\n\n  callback=(dataFromChild)=> {this.setState({component:(this.state.component===1) ? 2:1})\n              console.log(dataFromChild)  \n              this.numberOfGroup=dataFromChild\n  }\n\n  ListNamesOfGroup(groupNumber){\n    let students=[]\n    let lenght=Object.getOwnPropertyNames(jsonFile.groupList[groupNumber].studentList).length\n    for (let i=0;i<lenght-1;i++){\n      let student=jsonFile.groupList[groupNumber].studentList[i]\n      let name=student.name\n      let id=student.id\n      let status=student.status\n\n      console.dir(i+' '+name)\n      students.push( [name,id,status])\n\n    }\n    return students\n\n  }\n\n\n  \n   \n  render() {\n     \n\n\n\n\n    return (\n      <div className=\"App\">\n        <Header/> \n\n        {(this.state.component===1) ? \n            <Search listOfStudents={this.ListNamesOfGroup(this.numberOfGroup)}\n            /> : \n            <TeacherLoggedIn \n              groups=\n                {this.groups(jsonFile)}\n              component=\n                {this.callback}\n                \n              testi={'joo'}/>\n        }\n               \n         \n         \n        <Footer/>\n         \n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}